#!/usr/bin/env python

'''Script for job submission on HPC
Generates a PBS job submission script from the given options.
Activates a Conda environment named 'bmtk' when starting the job
'''

from ateam.sim.run import pbstools
# from ateam.sim.run import runner
import os.path
import ateam.sim.setup as sim
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("config")
parser.add_argument("--conda", default="bmtk")
parser.add_argument("--mem", "-m", default="4g")
parser.add_argument("--queue","-q", default="braintv")
parser.add_argument("--time","-t", default="00:05:00")
parser.add_argument("--nodes", "-n", default=1, type=int)
parser.add_argument("--ppn")
parser.add_argument("--procs","-p")

args = parser.parse_args()
if args.procs:
    args.nodes = None
    args.ppn = None
    n = args.procs
else:
    ppn = args.ppn or 24
    n = ppn*args.nodes
    
options = {
    'email':'tom.chartrand@alleninstitute.org',
    'email_options':'ae',
    'queue':args.queue,
    'jobname':'bmtk_test',
    'walltime':args.time,
    'nodes':args.nodes,
    'ppn':args.ppn,
    'mem':args.mem,
    'procs':args.procs,
    'priority':None
}

_pycommand = "from ateam.sim.run import runner; runner.run_bionet(\\\"{config}\\\")"

def bionet_mpi_command(config, ncores=1):
    command = _pycommand.format(config=config)
    mpicommand = "mpirun -np {ncores} nrniv -mpi -python -c \"{pycommand}\"".format(ncores=ncores, pycommand=command)
    return mpicommand

folder = os.path.dirname(args.config)
command = bionet_mpi_command(config=args.config, ncores=n)
job = pbstools.PBSJob(command=command, jobdir=folder, conda_env=args.conda, **options)
job.run()